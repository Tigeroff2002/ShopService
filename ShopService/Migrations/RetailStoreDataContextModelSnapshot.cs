// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopService.Data;

#nullable disable

namespace ShopService.Migrations
{
    [DbContext(typeof(RetailStoreDataContext))]
    partial class RetailStoreDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.7.22376.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopService.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Discount")
                        .HasColumnType("int")
                        .HasColumnName("IndividDiscount");

                    b.Property<bool>("IsRegistredLk")
                        .HasColumnType("bit")
                        .HasColumnName("RegistrationLK");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.Property<string>("Surname")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Surname");

                    b.Property<string>("TNumber")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("TelephoneNumber");

                    b.Property<float>("TotalSum")
                        .HasColumnType("real")
                        .HasColumnName("TotalPurchase");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ShopService.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("AccumCapacity")
                        .HasColumnType("real")
                        .HasColumnName("AccumCapacity");

                    b.Property<float?>("CamMp")
                        .HasColumnType("real")
                        .HasColumnName("Cammp");

                    b.Property<float>("Cost")
                        .HasColumnType("real")
                        .HasColumnName("Cost");

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<float?>("RAM")
                        .HasColumnType("real")
                        .HasColumnName("RAM");

                    b.Property<string>("ScreenResolution")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ScreenResolution");

                    b.Property<float?>("Size")
                        .HasColumnType("real")
                        .HasColumnName("Size");

                    b.HasKey("Id");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("ProducerId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("ShopService.Models.DeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("DeviceTypes");
                });

            modelBuilder.Entity("ShopService.Models.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Country");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.Property<float>("Popularity")
                        .HasColumnType("real")
                        .HasColumnName("Popularity");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WebSite");

                    b.HasKey("Id");

                    b.ToTable("Producer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Вьетнам",
                            Name = "Samsung",
                            Popularity = 4.9f,
                            WebSite = "www.samsung.com/ru"
                        });
                });

            modelBuilder.Entity("ShopService.Models.Trading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<float>("ClientMark")
                        .HasColumnType("real")
                        .HasColumnName("ClientMark");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("TradingDate");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeviceReturned")
                        .HasColumnType("bit")
                        .HasColumnName("isDeviceReturned");

                    b.Property<float>("ResultCost")
                        .HasColumnType("real")
                        .HasColumnName("ResultCost");

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("ShopService.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Adress");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.Property<string>("WorkingTime")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("WorkingTime");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("ShopService.Models.Device", b =>
                {
                    b.HasOne("ShopService.Models.DeviceType", "DeviceType")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopService.Models.Producer", "Producer")
                        .WithMany("Devices")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("ShopService.Models.Trading", b =>
                {
                    b.HasOne("ShopService.Models.Client", "Client")
                        .WithMany("Tradings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopService.Models.Device", "Device")
                        .WithMany("Tradings")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopService.Models.Warehouse", "WareHouse")
                        .WithMany("Tradings")
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Device");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("ShopService.Models.Client", b =>
                {
                    b.Navigation("Tradings");
                });

            modelBuilder.Entity("ShopService.Models.Device", b =>
                {
                    b.Navigation("Tradings");
                });

            modelBuilder.Entity("ShopService.Models.DeviceType", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("ShopService.Models.Producer", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("ShopService.Models.Warehouse", b =>
                {
                    b.Navigation("Tradings");
                });
#pragma warning restore 612, 618
        }
    }
}
