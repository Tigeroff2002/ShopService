@using Models
@model (List<User>, Models.User)
@{
    ViewData["Title"] = "Users Order Page";
}
<body class="back">
<div class="text-center">
@{var users = Model.Item1;}

    @if (users.Count == 0)
    {
    <div>
        <h4>
        Пользователей в базе нет
        </h4>
    </div>
    }
      
    @{var i = 0;}
    @if(users.Count > 0)
    {
        <h4>
            @Html.DisplayName($"Пользователей в системе : {users.Count}")
        </h4>
            <br />
        @foreach(var user in users)
        {
            <div>
                <h5>
                    @Html.DisplayName($"Пользователь # {++i} по имени {user.NickName} :")
                </h5>
                <br>
            <table class="border" >
                <tr>
                    <th>Номер заказа</th>
                    <th>Содержимое заказа</th>
                    <th>Стоимость заказа</th>
                    <th>Дата создания заказа</th>
                    <th>Готовность заказа</th>
                    <th>Дата истечения срока хранения заказа</th>
                    <th>Заказ получен?</th>
                    <th>Действие</th>
                </tr>
                @if(user.OldOrders.Count == 0)
                {
                    <tr>
                        У пользователя заказов нет
                    </tr>
                }
                @{var number = 0;}
                @foreach(var order in user.OldOrders)
                {
                    <tr>
                        <th>@Html.DisplayName($"{++number}")</th>
                        <th>@Html.DisplayFor(x => order.OrderDescription)</th>
                        <th>@Html.DisplayFor(x => order.ResultCost)</th>
                        <th>@Html.DisplayFor(x => order.OrderDate)</th>
                        <th>
                            @if(order.isPayd)
                            {
                                @Html.DisplayName("Готов к выдаче")
                            }
                            @if(!order.isPayd && order.isReadyForPayment)
                            {
                                @Html.DisplayName("Готов к оплате")
                            }
                            @if(!order.isPayd && !order.isReadyForPayment && order.isReadyForConfirmation)
                            {
                                @Html.DisplayName("Готов к подтверждению")
                            }
                            @if(!order.isPayd && !order.isReadyForPayment && !order.isReadyForConfirmation)
                            {
                                @Html.DisplayName("Заказ отменился")
                            }
                        </th>
                        <th>@Html.DisplayFor(x => order.ShippedDate)</th>
                            @if(order.isGot)
                            {
                                <th>@Html.DisplayName("Заказ получен") </th>
                                <th>
                                        <input type="button" value="Отменить заказ"
                                            onclick="location.href='@Url.Action("CancelUserOrder", "Order", 
                                                new 
                                                {
                                                    adminId = Model.Item2.Id,
                                                    Id = order.Id 
                                                })'" />
                                </th>
                            }
                            @if(!order.isGot && order.ShippedDate < DateTime.Now)
                            {
                                <th>@Html.DisplayName("Заказ истек") </th>
                                <th>
                                        <input type="button" value="Отменить заказ"
                                            onclick="location.href='@Url.Action("CancelUserOrder", "Order", 
                                                new 
                                                {
                                                    adminId = Model.Item2.Id,
                                                    Id = order.Id 
                                                })'" />
                                </th>
                            }
                            @if(!order.isGot && order.ShippedDate >= DateTime.Now)
                            {
                                <th>@Html.DisplayName("Заказ ожидает действия пользователя") </th>
                                <th>
                                        <input type="button" value="Отменить заказ"
                                            onclick="location.href='@Url.Action("CancelUserOrder", "Order",
                                                new 
                                                {
                                                    adminId = Model.Item2.Id,
                                                    Id = order.Id 
                                                })'" />
                                </th>
                            }
                    </tr>
                }
            </table>
            </div>
            <br />
            <br />
            }            
        }
        </div>

        <div>
             <input type="button" value="Назад на главную" 
                   onclick="location.href='@Url.Action("AuthIndex", "Home", new {id = Model.Item2.Id})'" />
        </div>

</body>